{"version":3,"file":"components-ChatBubble-chatBubble-stories.c32d9854.iframe.bundle.js","mappings":";;;;AASA;;;;;;AAQA;;;;;;AAQA;AAMA;AACA;;;AAGA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;AAWA;;;;AADA;AC7DA;ACIA;;;;AAMA","sources":["webpack://@ustinian-wang/u-ui/./src/components/ChatBubble/style.js","webpack://@ustinian-wang/u-ui/./src/assets/icons/bubbleTip.svg","webpack://@ustinian-wang/u-ui/./src/components/Paragraph/style.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\nimport Paragraph from \"components/Paragraph\";\nimport Icon from \"components/Icon\";\nimport Text from \"components/Text\";\n\nconst Time = styled(Paragraph).attrs({ type: \"secondary\", size: \"small\" })`\n  margin: 6px;\n  margin-left: 24px;\n  word-spacing: 1rem;\n`;\n\nconst BubbleTip = styled(Icon)`\n  position: absolute;\n  bottom: -15%;\n  left: 0;\n\n  z-index: 5;\n`;\n\nconst Bubble = styled.div`\n  padding: 15px 22px;\n  box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.1);\n  border-radius: 100px;\n  position: relative;\n  z-index: 10;\n`;\n\nconst MessageText = styled(Text)``;\n\nconst typeVariants = {\n  mine: css`\n    ${Bubble} {\n      background-color: ${({ theme }) => theme.primaryColor};\n    }\n\n    ${BubbleTip} {\n      transform: rotateY(180deg);\n      left: unset;\n      right: 0;\n\n      path {\n        fill: ${({ theme }) => theme.primaryColor};\n      }\n    }\n\n    ${Time} {\n      text-align: right;\n      margin-left: 0;\n      margin-right: 24px;\n    }\n\n    ${MessageText} {\n      color: white;\n    }\n  `,\n};\n\nconst StyledChatBubble = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ type }) => type && typeVariants[type]}\n`;\n\nexport default StyledChatBubble;\nexport { Bubble, BubbleTip, Time, MessageText };\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBubbleTip(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 16,\n    viewBox: \"0 0 29 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.48799 1.14592C8.16527 2.53004 6.72888 6.53762 0.510644 10.9194C0.190634 11.145 0.0337882 11.5382 0.110928 11.9222C0.188085 12.3061 0.484537 12.6083 0.866706 12.6929C0.901367 12.7005 1.73407 12.8823 3.2305 13.0133C7.49745 13.3866 16.2914 13.3021 27.4453 8.58744C28.2641 8.70295 4.37803 -1.82241 8.48799 1.14592Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBubbleTip);\nexport default __webpack_public_path__ + \"static/media/bubbleTip.51054e82a7a94cd345356da8c96737c1.svg\";\nexport { ForwardRef as ReactComponent };","import styled, {css} from \"styled-components\";\nimport StyledText from \"../Text/style.js\";\n\nconst StyledParagraph=styled(StyledText)`\n    ${({ ellipsis })=>\n    ellipsis &&\n        css`\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        `\n    }\n        \n`\n\nexport default StyledParagraph\n"],"names":[],"sourceRoot":""}