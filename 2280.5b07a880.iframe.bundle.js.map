{"version":3,"file":"2280.5b07a880.iframe.bundle.js","mappings":";AAIA;AACA;;;;;AAKA;;;AAIA;AAKA;;AAqBA;;;;;AAXA;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AACA;;;;ACLA;AACA;AAEA;;AAEA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAQA;AAHA;AACA;AACA;;ACvCA;;;AAGA;AACA;;;AAGA;;;;AAIA;;;AAmBA;;;;;;;;;;;;AADA;ACpCA","sources":["webpack://@ustinian-wang/u-ui/./src/components/Button/style.js","webpack://@ustinian-wang/u-ui/./src/components/Icon/style.js","webpack://@ustinian-wang/u-ui/./src/components/Text/style.js","webpack://@ustinian-wang/u-ui/./src/components/VoiceMessage/style.js","webpack://@ustinian-wang/u-ui/./src/assets/icons/play.svg"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nconst shapeVariants = {\n  circle: css`\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n    border-radius: 50%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  `,\n  rect: css`\n    padding: 12px 18px;\n    border-radius: 6px;\n  `,\n};\n\nconst typeVariants = {\n  primary: css`\n    background-color: ${({ theme }) => theme.primaryColor};\n    color: white;\n  `,\n};\n\nconst StyledButton = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);\n  ${({ shape }) => shapeVariants[shape]}\n  ${({ type }) => typeVariants[type]}\n  ${({ bgColor }) => `background-color: ${bgColor}`};\n\n  transform: scale(1);\n  transition: 0.4s;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.12);\n  }\n\n`;\n\nexport default StyledButton;\n","import styled from \"styled-components\";\n\nconst StyledIcon = styled.div`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    svg,\n    svg * {\n        ${({color})=>(color?`fill: ${color}`:\"\")};\n        ${({opacity})=>(opacity?`opacity: ${opacity}`:\"\")};\n    }\n        \n`;\n\nexport default StyledIcon\n","import styled, {css} from \"styled-components\";\n\nconst typeVariants = {\n    primary: css`\n        color: ${({theme})=>theme.grayDark};\n    `,\n    secondary: css`\n        color: ${({theme})=>theme.grayDark};\n        opacity: 0.3;\n    `,\n    danger: css`\n        color: ${({theme})=>theme.red};\n    `,\n\n}\n\nconst sizeVariants ={\n    normal: css`\n        ${({ theme })=> theme.normal}\n    `,\n    medium: css`\n        ${({ theme })=> theme.medium}\n    `,\n    large: css`\n        ${({ theme })=> theme.large}\n    `,\n    xlarge: css`\n        ${({ theme })=> theme.xlarge}\n    `,\n    xxlarge: css`\n        ${({ theme })=> theme.xxlarge}\n    `,\n    small: css`\n        ${({ theme })=> theme.small}\n    `,\n    xsmall: css`\n        ${({ theme })=> theme.xsmall}\n    `,\n    xxsmall:css`\n        ${({ theme })=> theme.xxsmall}\n    `\n}\n\nconst StyledText = styled.div`\n    font-size: ${({size})=> sizeVariants[size] || sizeVariants.normal};\n    ${({type})=>typeVariants[type] || typeVariants.normal}\n    ${({bold})=> bold && 'font-weight: 500'}\n`;\n\nexport default StyledText\n","import styled, { css } from \"styled-components\";\nimport StyledButton from \"components/Button/style\";\nimport StyledIcon from \"components/Icon/style\";\nimport StyledText from \"components/Text/style\";\n\nconst typeVariants = {\n  mine: css`\n    ${StyledButton} {\n      background-color: white;\n\n      ${StyledIcon} path {\n        fill: ${({ theme }) => theme.primaryColor};\n      }\n    }\n    & > ${StyledIcon} path {\n      fill: white;\n    }\n\n    & > ${StyledText} {\n      color: white;\n    }\n  `,\n};\n\nconst StyledVoiceMessage = styled.div`\n  display: flex;\n  align-items: center;\n\n  & > *:first-child {\n    flex-shrink: 0;\n  }\n\n  & > *:not(:first-child) {\n    margin-left: 16px;\n  }\n\n  ${({ type }) => type && typeVariants[type]}\n`;\n\nexport default StyledVoiceMessage;\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPlay(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 16,\n    viewBox: \"0 0 14 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.6849 6.95589L2.76401 0.777231C2.47072 0.604632 2.10653 0.633388 1.83147 0.633388C0.731265 0.633388 0.736145 1.47302 0.736145 1.68574V14.3142C0.736145 14.4941 0.731329 15.3667 1.83147 15.3667C2.10653 15.3667 2.47078 15.3953 2.76401 15.2227L12.6848 9.04416C13.4991 8.56521 13.3584 7.99999 13.3584 7.99999C13.3584 7.99999 13.4992 7.43477 12.6849 6.95589Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.35a907b2fe7e476edb0aaccf2c6cc511.svg\";\nexport { ForwardRef as ReactComponent };"],"names":[],"sourceRoot":""}