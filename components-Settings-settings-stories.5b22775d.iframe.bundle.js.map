{"version":3,"file":"components-Settings-settings-stories.5b22775d.iframe.bundle.js","mappings":";;;AAOA;;ACPA;ACIA;AACA;;;;;AAKA;;;AAIA;AAKA;;AAqBA;;;;;AAXA;AACA;AACA;;;;;;;;;;;;;;;ACvBA;AACA;;;;ACLA;;;;AAMA;;;;;ACLA;;ACFA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;AAMA;AACA;;;;;;AAaA;;;;;;AC1CA;AACA;AAEA;;AAEA;AAEA;AACA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAQA;AAHA;AACA;AACA","sources":["webpack://@ustinian-wang/u-ui/./src/components/Settings/style.js","webpack://@ustinian-wang/u-ui/./src/assets/icons/arrowMenuRight.svg","webpack://@ustinian-wang/u-ui/./src/components/Button/style.js","webpack://@ustinian-wang/u-ui/./src/components/Icon/style.js","webpack://@ustinian-wang/u-ui/./src/components/Paragraph/style.js","webpack://@ustinian-wang/u-ui/./src/components/Seperator/style.js","webpack://@ustinian-wang/u-ui/./src/components/Switch/style.js","webpack://@ustinian-wang/u-ui/./src/components/Text/style.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst StyledSettingsItem = styled.div``;\n\nconst SettingsItemControl = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst StyledSettingsGroup = styled.div``;\n\nconst StyledSettings = styled.div`\n  padding: 72px;\n`;\n\nexport default StyledSettings;\nexport { StyledSettingsItem, SettingsItemControl, StyledSettingsGroup };\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowMenuRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 13,\n    height: 23,\n    viewBox: \"0 0 13 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.706875 21.9202C1.0974 22.3108 1.73056 22.3108 2.12109 21.9202L12.0206 12.0207C12.4111 11.6302 12.4111 10.9971 12.0206 10.6065L2.12109 0.707037C1.73056 0.316513 1.0974 0.316513 0.706874 0.707037C0.31635 1.09756 0.31635 1.73073 0.706874 2.12125L9.89926 11.3136L0.706875 20.506C0.31635 20.8966 0.31635 21.5297 0.706875 21.9202Z\",\n    fill: \"#D8D8D8\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowMenuRight);\nexport default __webpack_public_path__ + \"static/media/arrowMenuRight.d494082420cda9d76176bd0f59e4714a.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { css } from \"styled-components\";\n\nconst shapeVariants = {\n  circle: css`\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n    border-radius: 50%;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  `,\n  rect: css`\n    padding: 12px 18px;\n    border-radius: 6px;\n  `,\n};\n\nconst typeVariants = {\n  primary: css`\n    background-color: ${({ theme }) => theme.primaryColor};\n    color: white;\n  `,\n};\n\nconst StyledButton = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);\n  ${({ shape }) => shapeVariants[shape]}\n  ${({ type }) => typeVariants[type]}\n  ${({ bgColor }) => `background-color: ${bgColor}`};\n\n  transform: scale(1);\n  transition: 0.4s;\n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.12);\n  }\n\n`;\n\nexport default StyledButton;\n","import styled from \"styled-components\";\n\nconst StyledIcon = styled.div`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    svg,\n    svg * {\n        ${({color})=>(color?`fill: ${color}`:\"\")};\n        ${({opacity})=>(opacity?`opacity: ${opacity}`:\"\")};\n    }\n        \n`;\n\nexport default StyledIcon\n","import styled, {css} from \"styled-components\";\nimport StyledText from \"../Text/style.js\";\n\nconst StyledParagraph=styled(StyledText)`\n    ${({ ellipsis })=>\n    ellipsis &&\n        css`\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        `\n    }\n        \n`\n\nexport default StyledParagraph\n","import styled from \"styled-components\";\n\nconst StyledSeperator = styled.div`\n  width: 100%;\n  height: 1px;\n  border-bottom: 1px solid ${({ theme }) => theme.gray4};\n`;\n\nexport default StyledSeperator;\n","import styled from \"styled-components\";\n\nconst Slider = styled.span`\n  background-color: ${({ theme }) => theme.gray4};\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  border-radius: 16px;\n  transition: 0.4s;\n\n  &::before {\n    display: block;\n    content: \"\";\n    position: absolute;\n    width: 28px;\n    height: 28px;\n    top: 1px;\n    left: 1px;\n    background-color: white;\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05), 0px 2px 2px rgba(0, 0, 0, 0.1),\n      0px 3px 1px rgba(0, 0, 0, 0.0510643);\n    border-radius: 50%;\n    transition: 0.4s;\n  }\n`;\n\nconst Checkbox = styled.input.attrs({ type: \"checkbox\" })`\n  width: 0;\n  height: 0;\n  opacity: 0;\n  :checked + ${Slider} {\n    background-color: ${({ theme }) => theme.primaryColor};\n\n    ::before {\n      transform: translateX(20px);\n    }\n  }\n`;\n\nconst StyledSwitch = styled.label`\n  width: 51px;\n  height: 31px;\n  position: relative;\n  display: inline-block;\n`;\n\nexport default StyledSwitch;\nexport { Checkbox, Slider };\n","import styled, {css} from \"styled-components\";\n\nconst typeVariants = {\n    primary: css`\n        color: ${({theme})=>theme.grayDark};\n    `,\n    secondary: css`\n        color: ${({theme})=>theme.grayDark};\n        opacity: 0.3;\n    `,\n    danger: css`\n        color: ${({theme})=>theme.red};\n    `,\n\n}\n\nconst sizeVariants ={\n    normal: css`\n        ${({ theme })=> theme.normal}\n    `,\n    medium: css`\n        ${({ theme })=> theme.medium}\n    `,\n    large: css`\n        ${({ theme })=> theme.large}\n    `,\n    xlarge: css`\n        ${({ theme })=> theme.xlarge}\n    `,\n    xxlarge: css`\n        ${({ theme })=> theme.xxlarge}\n    `,\n    small: css`\n        ${({ theme })=> theme.small}\n    `,\n    xsmall: css`\n        ${({ theme })=> theme.xsmall}\n    `,\n    xxsmall:css`\n        ${({ theme })=> theme.xxsmall}\n    `\n}\n\nconst StyledText = styled.div`\n    font-size: ${({size})=> sizeVariants[size] || sizeVariants.normal};\n    ${({type})=>typeVariants[type] || typeVariants.normal}\n    ${({bold})=> bold && 'font-weight: 500'}\n`;\n\nexport default StyledText\n"],"names":[],"sourceRoot":""}