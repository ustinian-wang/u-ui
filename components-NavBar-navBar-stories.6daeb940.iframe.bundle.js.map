{"version":3,"file":"components-NavBar-navBar-stories.6daeb940.iframe.bundle.js","mappings":";;;;;;;;;AAcA;;AAEA;;AAEA;;;AAKA;AACA;;;;;AAQA;;;;AAIA;;;;AAIA;;AAEA;;;;AAOA;;;AAGA;;;;AC7CA;AACA;;AAIA;;;;;AAOA;;;;;AAKA;AAOA;AAGA;AACA;;;AAGA;;;;;;AAOA;;;;ACnCA;;AAEA;;;;AAIA;AAEA;;;;;;AAMA;AACA;AAIA;;AAQA;;;AADA;;;AChCA;AACA;;AAEA;AACA;;;;;;;;;;;;AAcA;;;;;AAKA;;;;AAIA;AAGA;AACA;;AAEA;AACA","sources":["webpack://@ustinian-wang/u-ui/./src/components/NavBar/style.js","webpack://@ustinian-wang/u-ui/./src/components/Avatar/style.js","webpack://@ustinian-wang/u-ui/./src/components/Badge/style.js","webpack://@ustinian-wang/u-ui/./src/utils/mixins.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { activeBar } from \"../../utils/mixins\";\nimport StyledAvatar, { StatusIcon } from \"../Avatar/style\";\n\nconst StyledMenuItem = styled.div`\n  & > a{\n    width: 100%;\n    height: 74px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    ${activeBar()};\n    //为了后面设置交互动画使用的\n    ${({active})=>(active?\"\":`&::before, &::after{height:0}`)}\n  }\n`;\n\nconst MenuIcon = styled(FontAwesomeIcon)`\n    color: white;\n        font-size: 24px;\n        opacity: ${({active})=>active ? 1 : 0.3};\n`;\n\n\nconst StyledNavBar = styled.div`\n    display: grid;\n    grid-template-rows: 1fr 4fr;\n    width: 100px;\n    height: 100vh;\n    background-color: ${({theme})=>theme.darkPurple};\n    padding: 30px 0;\n    \n    //使用头像类名，对样式进行覆盖\n    ${StyledAvatar} {\n        // 这个不需要父容器，就可以把自己居中了\n        justify-self: center;\n        // 对头像的状态图标也进行覆盖\n        ${StatusIcon} {\n            &::before {\n                background-color: ${({theme})=>theme.darkPurple};\n            }\n        }\n    }\n`;\n\n//菜单项样式\nconst MenuItems = styled.div`\n    display: grid;\n    grid-template-rows: repeat(5, minmax(auto, 88px)) 1fr;\n`;\n\nexport default StyledNavBar\n\nexport {MenuIcon, StyledMenuItem, MenuItems}","import styled, {css} from \"styled-components\";\nimport { circle } from \"../../utils/mixins\";\n\nconst circleMixinFunc = (color, size=\"8px\") => css`\n    content: \"\";\n    display: block;\n    position: absolute;\n    ${circle(color, size)}\n`\n\nconst StyledAvatar = styled.div`\n    position: relative;\n`;\n\nconst StatusIcon = styled.div`\n    position: absolute;\n    left: 2px;\n    top: 4px;\n    &::before{\n        ${({size})=>circleMixinFunc(\"white\", size)}\n        transform: scale(2);\n    }\n    \n    &::after{\n        ${({theme, status, size})=>{\n            if(status===\"online\"){\n                return circleMixinFunc(theme.green, size)\n            }else if(status===\"offline\"){\n                return circleMixinFunc(theme.gray, size)\n            }\n        }\n    }\n`;\nconst AvatarClip = styled.div`\n    width: ${({size})=>size};\n    height: ${({size})=>size};\n    -webkit-border-radius: 50%;-moz-border-radius: 50%;border-radius: 50%;\n    overflow: hidden;\n`;\nconst AvatarImage = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    \n    object-position: center;\n`;\n\nexport default StyledAvatar\nexport {StatusIcon, AvatarClip, AvatarImage}\n","import styled, { css } from \"styled-components\";\nimport { circle } from \"../../utils/mixins\";\nimport theme from \"../../theme\";\n\n//定义不同徽章的变体\nconst variants = {\n    dot: css`\n        position: relative;\n        padding: 5px;\n        &::after {\n        display:${({ show })=>(show ?\"block\" : \"none\")};\n        content: \"\";\n        ${({ theme })=> circle(theme.red, \"6px\")}\n        position: absolute;\n        right: 0;\n        top:0;\n    `,\n    default: css`\n        ${ ( { theme } ) => circle( theme.red, \"26px\" ) }\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        box-shadow: 0 18px 40px 0 rgba(0，0，0，0 .04), 0 6px 12px 0 rgba(0，0，0，0 .08);\n\n        ${ ( { showZero, count } ) => !showZero && count === 0 && `visibility: hidden }`}\n    `,\n};\n\nconst Count = styled.div`\n    font-size: ${(theme)=>theme.normal};\n    color: white;\n`;\n\nconst StyledBadge = styled.div`\n    display: inline-block;\n    //针对不同变体进行样式设置 \n    ${({variant})=>variants[variant]}\n`\n\nexport default StyledBadge\n\nexport {\n    Count\n}","import { css } from \"styled-components\";\n\nexport const circle = (color, size=\"8px\") => css`\n    position: absolute;\n    height: ${size};\n    width: ${size};\n    -webkit-border-radius: 50%;-moz-border-radius: 50%;border-radius: 50%;\n    background: ${color};\n`\n\nexport const activeBar = ({barWidth=\"8px\", shadowWidth=\"20px\"} = {})=> css`\n    position: relative;\n    &::before,\n    &::after{\n        display: block;\n        content: \"\";\n        position: absolute;\n        height: 100%;\n        left: 0\n    }\n    \n    &::before{\n        width: ${barWidth};\n        background: linear-gradient(180deg,rgba(142, 197, 242, 1) 0%, rgba(79, 157, 222, 1) 100%);\n    }\n    \n    &::after{\n        width: ${shadowWidth};\n        background: linear-gradient(270deg, rgba(41, 47, 76, 1) 0%, rgba(142, 197, 242, 1) 100%);\n        opacity: 0.6;\n    }\n`\n\nexport const card = (radius = \"6px\", padding = \"20px 30px\") => css`\n  padding: ${padding};\n  background: ${({ theme }) => theme.background};\n  box-shadow: 0px 18px 40px 0px rgba(0, 0, 0, 0.04);\n  border-radius: ${radius};\n`;\n"],"names":[],"sourceRoot":""}