{"version":3,"file":"organizations-Conversation-conversation-stories.3aaec794.iframe.bundle.js","mappings":";;;;;;;;;;;;AAgBA;;AAeA;;;;AALA;;;;;;;;;ACnBA;AACA;;AAIA;;;;;AAOA;;;;;AAKA;AAOA;AAGA;AACA;;;AAGA;;;;;;AAOA;;;;ACpCA;;;;;;AAQA;;;;;;AAQA;AAMA;AACA;;;AAGA;;;;;;AAMA;;;;AAIA;;;;;;AAMA;;;AAWA;;;;AADA;AC7DA;;ACKA;;;;AAMA;;;AAGA;;AAEA;;AAEA;;;;AASA;;;;ACvBA;;;;AAMA;;;;;ACLA;;;ACCA;;;;;AAOA;;;AAWA;;;;;AADA;;;ACnBA;AACA;;AAEA;AACA;;;;;;;;;;;;AAcA;;;;;AAKA;;;;AAIA;AAGA;AACA;;AAEA;AACA","sources":["webpack://@ustinian-wang/u-ui/./src/organizations/Conversation/style.js","webpack://@ustinian-wang/u-ui/./src/components/Avatar/style.js","webpack://@ustinian-wang/u-ui/./src/components/ChatBubble/style.js","webpack://@ustinian-wang/u-ui/./src/assets/icons/bubbleTip.svg","webpack://@ustinian-wang/u-ui/./src/components/Dropdown/style.js","webpack://@ustinian-wang/u-ui/./src/components/Paragraph/style.js","webpack://@ustinian-wang/u-ui/./src/components/Seperator/style.js","webpack://@ustinian-wang/u-ui/./src/components/TitleBar/style.js","webpack://@ustinian-wang/u-ui/./src/utils/mixins.js"],"sourcesContent":["import styled from \"styled-components\";\nimport ChatBubble from \"components/ChatBubble\";\nimport { animated } from \"react-spring\";\n\nconst Conversations = styled(animated.div)`\n  padding: 10px 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  overflow-y: auto;\n  flex: 1;\n\n  & > * {\n    margin: 10px 0;\n  }\n`;\n\nconst MyChatBubble = styled(ChatBubble).attrs({ type: \"mine\" })`\n  align-self: flex-end;\n`;\n\nconst StyledConversation = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  border: 1px solid ${({ theme }) => theme.gray4};\n\n  & > *:last-child {\n    align-self: end;\n  }\n`;\n\nexport default StyledConversation;\nexport { Conversations, MyChatBubble };\n","import styled, {css} from \"styled-components\";\nimport { circle } from \"../../utils/mixins\";\n\nconst circleMixinFunc = (color, size=\"8px\") => css`\n    content: \"\";\n    display: block;\n    position: absolute;\n    ${circle(color, size)}\n`\n\nconst StyledAvatar = styled.div`\n    position: relative;\n`;\n\nconst StatusIcon = styled.div`\n    position: absolute;\n    left: 2px;\n    top: 4px;\n    &::before{\n        ${({size})=>circleMixinFunc(\"white\", size)}\n        transform: scale(2);\n    }\n    \n    &::after{\n        ${({theme, status, size})=>{\n            if(status===\"online\"){\n                return circleMixinFunc(theme.green, size)\n            }else if(status===\"offline\"){\n                return circleMixinFunc(theme.gray, size)\n            }\n        }\n    }\n`;\nconst AvatarClip = styled.div`\n    width: ${({size})=>size};\n    height: ${({size})=>size};\n    -webkit-border-radius: 50%;-moz-border-radius: 50%;border-radius: 50%;\n    overflow: hidden;\n`;\nconst AvatarImage = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    \n    object-position: center;\n`;\n\nexport default StyledAvatar\nexport {StatusIcon, AvatarClip, AvatarImage}\n","import styled, { css } from \"styled-components\";\nimport Paragraph from \"components/Paragraph\";\nimport Icon from \"components/Icon\";\nimport Text from \"components/Text\";\n\nconst Time = styled(Paragraph).attrs({ type: \"secondary\", size: \"small\" })`\n  margin: 6px;\n  margin-left: 24px;\n  word-spacing: 1rem;\n`;\n\nconst BubbleTip = styled(Icon)`\n  position: absolute;\n  bottom: -15%;\n  left: 0;\n\n  z-index: 5;\n`;\n\nconst Bubble = styled.div`\n  padding: 15px 22px;\n  box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.1);\n  border-radius: 100px;\n  position: relative;\n  z-index: 10;\n`;\n\nconst MessageText = styled(Text)``;\n\nconst typeVariants = {\n  mine: css`\n    ${Bubble} {\n      background-color: ${({ theme }) => theme.primaryColor};\n    }\n\n    ${BubbleTip} {\n      transform: rotateY(180deg);\n      left: unset;\n      right: 0;\n\n      path {\n        fill: ${({ theme }) => theme.primaryColor};\n      }\n    }\n\n    ${Time} {\n      text-align: right;\n      margin-left: 0;\n      margin-right: 24px;\n    }\n\n    ${MessageText} {\n      color: white;\n    }\n  `,\n};\n\nconst StyledChatBubble = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ type }) => type && typeVariants[type]}\n`;\n\nexport default StyledChatBubble;\nexport { Bubble, BubbleTip, Time, MessageText };\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgBubbleTip(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 16,\n    viewBox: \"0 0 29 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.48799 1.14592C8.16527 2.53004 6.72888 6.53762 0.510644 10.9194C0.190634 11.145 0.0337882 11.5382 0.110928 11.9222C0.188085 12.3061 0.484537 12.6083 0.866706 12.6929C0.901367 12.7005 1.73407 12.8823 3.2305 13.0133C7.49745 13.3866 16.2914 13.3021 27.4453 8.58744C28.2641 8.70295 4.37803 -1.82241 8.48799 1.14592Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBubbleTip);\nexport default __webpack_public_path__ + \"static/media/bubbleTip.51054e82a7a94cd345356da8c96737c1.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport StyledSeperator from \"components/Seperator/style\";\n\nconst DropdownItem = styled.div`\n  margin: 12px 0;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  padding: 4px 26px;\n  background: ${({ theme }) => theme.background};\n  box-shadow: 0px 4px 32px rgba(0, 0, 0, 0.08);\n\n  display: ${({ visible }) => (visible ? \"block\" : \"none\")};\n\n  ${({ align }) => align}: 0;\n\n  ${StyledSeperator} {\n    margin: -3px -26px;\n    width: calc(100% + 52px);\n  }\n`;\n\nconst StyledDropdown = styled.div`\n  position: relative;\n  cursor: pointer;\n`;\n\nexport default StyledDropdown;\nexport { DropdownContainer, DropdownItem };\n","import styled, {css} from \"styled-components\";\nimport StyledText from \"../Text/style.js\";\n\nconst StyledParagraph=styled(StyledText)`\n    ${({ ellipsis })=>\n    ellipsis &&\n        css`\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        `\n    }\n        \n`\n\nexport default StyledParagraph\n","import styled from \"styled-components\";\n\nconst StyledSeperator = styled.div`\n  width: 100%;\n  height: 1px;\n  border-bottom: 1px solid ${({ theme }) => theme.gray4};\n`;\n\nexport default StyledSeperator;\n","import styled from \"styled-components\";\nimport StyledIcon from \"components/Icon/style\";\nimport { animated } from \"react-spring\";\n\nconst Title = styled.div`\n  display: grid;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${StyledIcon} {\n    cursor: pointer;\n  }\n`;\n\nconst StyledTitleBar = styled(animated.div)`\n  display: grid;\n  grid-template-columns: 62px 1fr 112px;\n  padding: 30px;\n  max-height: 110px;\n  border-bottom: 1px solid ${({ theme }) => theme.gray4};\n`;\n\nexport default StyledTitleBar;\nexport { Actions, Title };\n","import { css } from \"styled-components\";\n\nexport const circle = (color, size=\"8px\") => css`\n    position: absolute;\n    height: ${size};\n    width: ${size};\n    -webkit-border-radius: 50%;-moz-border-radius: 50%;border-radius: 50%;\n    background: ${color};\n`\n\nexport const activeBar = ({barWidth=\"8px\", shadowWidth=\"20px\"} = {})=> css`\n    position: relative;\n    &::before,\n    &::after{\n        display: block;\n        content: \"\";\n        position: absolute;\n        height: 100%;\n        left: 0\n    }\n    \n    &::before{\n        width: ${barWidth};\n        background: linear-gradient(180deg,rgba(142, 197, 242, 1) 0%, rgba(79, 157, 222, 1) 100%);\n    }\n    \n    &::after{\n        width: ${shadowWidth};\n        background: linear-gradient(270deg, rgba(41, 47, 76, 1) 0%, rgba(142, 197, 242, 1) 100%);\n        opacity: 0.6;\n    }\n`\n\nexport const card = (radius = \"6px\", padding = \"20px 30px\") => css`\n  padding: ${padding};\n  background: ${({ theme }) => theme.background};\n  box-shadow: 0px 18px 40px 0px rgba(0, 0, 0, 0.04);\n  border-radius: ${radius};\n`;\n"],"names":[],"sourceRoot":""}